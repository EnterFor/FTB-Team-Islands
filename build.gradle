plugins {
    id 'forgified-fabric-loom' version '0.6.79'
    id 'maven-publish'
}

apply from: 'private.gradle'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def ENV = System.getenv()
version = "${mod_version}${ENV.BUILD_NUMBER ? "-build.${ENV.BUILD_NUMBER}" : "-snapshot-9"}"
archivesBaseName = project.archives_base_name
group = project.maven_group

loom {
    silentMojangMappingsLicense()

    mixinConfigs = []
    useFabricMixin = true

    dataGen {
        mod project.mod_id
    }

    launches {
        data {
            arg "--existing", file("src/main/resources").absolutePath
        }
    }
}

repositories {
    maven { url "https://www.cursemaven.com" }
    maven { url "https://maven.saps.dev" }
    maven { url "https://maven.latvian.dev" }
    maven {
        url "https://git.ftb.dev/api/v4/groups/156/-/packages/maven"
        credentials(HttpHeaderCredentials) {
            name = 'Private-Token'
            value = ftbMavenToken
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings minecraft.officialMojangMappings()
    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    modRuntime "dev.ftb.mods:ftb-chunks:$ftb_mods_chunks"
    modRuntime "dev.ftb.mods:ftb-gui-library:$ftb_mods_gui_lib"
    modCompile "dev.ftb.mods:ftb-chunks:$ftb_mods_chunks"
    modCompile "dev.ftb.mods:ftb-teams-forge:$ftb_mods_teams"

    modCompile "curse.maven:architectury-forge-419699:3254875"
}

processResources {
    inputs.property "version", project.version
    inputs.property "teams_version", ftb_mods_teams

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version, "team_version": ftb_mods_teams
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    // withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }

    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    classifier "dev"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

//if (ENV.CURSEFORGE_KEY) {
//    curseforge {
//        apiKey = ENV.CURSEFORGE_KEY
//        project {
//            id = project.curseforge_id
//            releaseType = "release"
//            addGameVersion "Forge"
//            addGameVersion "1.16.5"
//            mainArtifact(remapJar.archivePath)
//            changelog = getGitChangelog
//            changelogType = 'markdown'
//        }
//    }
//}

//jar.finalizedBy('reobfJar')
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
